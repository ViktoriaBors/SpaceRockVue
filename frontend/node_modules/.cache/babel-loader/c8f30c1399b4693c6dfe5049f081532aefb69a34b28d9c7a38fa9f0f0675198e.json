{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport DashboardNav from \"../components/DashboardNav.vue\";\nimport BottomFooter from \"../components/BottomFooter.vue\";\nimport Accordion from \"../components/Accordion.vue\";\nimport SampleCardFrom from \"../components/SampleCardForm.vue\";\nimport { ref } from \"@vue/runtime-core\";\nimport { useRouter, useRoute } from 'vue-router';\nexport default {\n  __name: 'DashboardView',\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    var imgSource = \"(img/pexels-mike-b-383559.jpg)\";\n    var user = ref(null);\n\n    // for redirect\n    var router = useRouter();\n    var route = useRoute();\n    // during \"create\" = setup - check user session\n    fetch(\"http://localhost:8081/user\", {\n      credentials: \"include\"\n    }).then(function (res) {\n      if (!res.ok) {\n        throw new Error(\"error\");\n      } else return res.json();\n    }).then(function (data) {\n      console.log(data);\n      user.value = data;\n    })[\"catch\"](function (error) {\n      console.log(error);\n      swal({\n        title: \"Error\",\n        text: \"Access Denied\",\n        icon: \"error\"\n      });\n      setTimeout(function () {\n        router.push({\n          name: \"login\"\n        });\n      }, 2000);\n    });\n\n    // Get sample data - user specific\n    var searchWord = ref(\"\");\n    var alphabetical = ref(false);\n    var newest = ref(false);\n    var sampleData = ref([]);\n    var getData = function getData() {\n      var email = user.value.email;\n      fetch(\"http://localhost:8081/data/modify?word=\".concat(searchWord.value, \"&alphabetic=\").concat(alphabetical.value.checked, \"&newest=\").concat(newest.value.checked, \"&email=\").concat(email, \"&getlength=true\")).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data);\n      });\n    };\n    var __returned__ = {\n      imgSource: imgSource,\n      user: user,\n      router: router,\n      route: route,\n      searchWord: searchWord,\n      alphabetical: alphabetical,\n      newest: newest,\n      sampleData: sampleData,\n      getData: getData,\n      DashboardNav: DashboardNav,\n      BottomFooter: BottomFooter,\n      Accordion: Accordion,\n      SampleCardFrom: SampleCardFrom,\n      ref: ref,\n      useRouter: useRouter,\n      useRoute: useRoute\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;;;;;;AAkKA,OAAOA,YAAY,MAAM,gCAAgC;AACzD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;;;;;;IAChD,IAAIC,SAAS,GAAG,gCAAgC;IAEhD,IAAMC,IAAI,GAAGJ,GAAG,CAAC,IAAI,CAAC;;IAEtB;IACA,IAAMK,MAAM,GAAGJ,SAAS,EAAE;IAC1B,IAAMK,KAAK,GAAGJ,QAAQ,EAAE;IACxB;IACAK,KAAK,+BAA+B;MAClCC,WAAW,EAAE;IACf,CAAC,CAAC,CACCC,IAAI,CAAC,UAACC,GAAG,EAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,OAAO,CAAC;MAC1B,CAAC,MAAM,OAAOF,GAAG,CAACG,IAAI,EAAE;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAC,UAACK,IAAI,EAAK;MACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBV,IAAI,CAACa,KAAK,GAAGH,IAAI;IACnB,CAAC,CAAC,SACI,CAAC,UAACI,KAAK,EAAK;MAChBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAClBC,IAAI,CAAC;QACHC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE;MACR,CAAC,CAAC;MACFC,UAAU,CAAC,YAAM;QACflB,MAAM,CAACmB,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MAChC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;;IAEJ;IACA,IAAIC,UAAU,GAAG1B,GAAG,CAAC,EAAE,CAAC;IACxB,IAAI2B,YAAY,GAAG3B,GAAG,CAAC,KAAK,CAAC;IAC7B,IAAI4B,MAAM,GAAG5B,GAAG,CAAC,KAAK,CAAC;IAEvB,IAAI6B,UAAU,GAAG7B,GAAG,CAAC,EAAE,CAAC;IAExB,IAAM8B,OAAO,GAAG,SAAVA,OAAO,GAAS;MACpB,IAAIC,KAAK,GAAG3B,IAAI,CAACa,KAAK,CAACc,KAAK;MAC5BxB,KAAK,kDAA2CmB,UAAU,CAACT,KAAK,yBAAeU,YAAY,CAACV,KAAK,CAACe,OAAO,qBAAWJ,MAAM,CAACX,KAAK,CAACe,OAAO,oBAAUD,KAAK,qBAAkB,CACtKtB,IAAI,CAAC,aAAG;QAAA,OAAIC,GAAG,CAACG,IAAI,EAAE;MAAA,EAAC,CACvBJ,IAAI,CAAC,cAAI,EAAI;QACZM,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,CAAC;IACN,CAAC","names":["DashboardNav","BottomFooter","Accordion","SampleCardFrom","ref","useRouter","useRoute","imgSource","user","router","route","fetch","credentials","then","res","ok","Error","json","data","console","log","value","error","swal","title","text","icon","setTimeout","push","name","searchWord","alphabetical","newest","sampleData","getData","email","checked"],"sources":["/home/viki/Projects/JSExamProjectFinal/Vue/SpaceRockVue/frontend/src/views/DashboardView.vue"],"sourcesContent":["<template>\n  <div>\n    <DashboardNav :user=\"user\" />\n    <main class=\"text-justify\">\n      <div class=\"container mx-auto px-6 py-4 bg-slate-200\">\n        <p class=\"pt-2 text-lg text-center font-bold py-4\">\n          Here you can see your pending samples in the database.\n        </p>\n        <form action=\"GET\" class=\"mb-4\">\n          <!--search-bar-->\n          <div class=\"flex justify-center\">\n            <div class=\"w-full md:w-2/4\">\n              <div\n                class=\"\n                  relative\n                  flex flex-wrap\n                  sm:flex-nowrap\n                  items-stretch\n                  w-full\n                  mb-2\n                \"\n              >\n                <input\n                  type=\"text\"\n                  v-model=\"searchWord\"\n                  class=\"\n                    form-control\n                    relative\n                    flex-auto\n                    min-w-0\n                    block\n                    w-full\n                    px-3\n                    py-1.5\n                    text-base\n                    font-normal\n                    text-gray-700\n                    bg-white bg-clip-padding\n                    border border-solid border-gray-300\n                    rounded\n                    transition\n                    ease-in-out\n                    m-0\n                    focus:text-gray-700 focus:bg-white focus:border-gray-700\n                  \"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                  aria-describedby=\"searchSavedBtn\"\n                />\n                <button\n                  id=\"searchSavedBtn\"\n                  @click=\"getData\"\n                  class=\"\n                    btn\n                    inline-block\n                    px-6\n                    py-2\n                    border-2 border-gray-400\n                    bg-yellow-500\n                    text-black\n                    font-bold\n                    text-xs\n                    leading-tight\n                    uppercase\n                    rounded\n                    shadow-md\n                    hover:bg-yellow-600 hover:shadow-lg\n                    active:bg-yellow-700 active:shadow-lg\n                    focus:outline-none focus:ring-0\n                    transition\n                    duration-150\n                    ease-in-out\n                  \"\n                  type=\"button\"\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n          <!--sorting options-->\n          <div class=\"flex flex-row justify-center items-center\">\n            <div class=\"p-2\">\n              <input\n                type=\"radio\"\n                id=\"alphabetical\"\n                name=\"sorting\"\n                value=\"alphabetical\"\n                class=\"hidden peer sr-only\"\n                ref=\"alphabetical\"\n              />\n              <label\n                for=\"alphabetical\"\n                class=\"\n                  cursor-pointer\n                  peer-checked:bg-yellow-600\n                  checked:shadow-lg\n                  inline-block\n                  px-5\n                  py-2.5\n                  bg-indigo-300\n                  text-gray-700\n                  font-bold\n                  text-xs\n                  leading-tight\n                  uppercase\n                  rounded\n                  shadow-md\n                  hover:bg-indigo-400 hover:shadow-lg\n                \"\n                >Alphabetical</label\n              >\n            </div>\n            <div class=\"p-2\">\n              <input\n                type=\"radio\"\n                id=\"newest\"\n                name=\"sorting\"\n                value=\"newest\"\n                class=\"hidden peer sr-only\"\n                ref=\"newest\"\n              />\n              <label\n                for=\"newest\"\n                class=\"\n                  cursor-pointer\n                  peer-checked:bg-yellow-600\n                  checked:shadow-lg\n                  inline-block\n                  px-5\n                  py-2.5\n                  bg-indigo-300\n                  text-gray-700\n                  font-bold\n                  text-xs\n                  leading-tight\n                  uppercase\n                  rounded\n                  shadow-md\n                  hover:bg-indigo-400 hover:shadow-lg\n                \"\n                >Newest first</label\n              >\n            </div>\n          </div>\n        </form>\n        <!--Already saved samples by user appears here - all forms plus pagination-->\n        <div v-if=\"sampleData.length\">\n          <SampleCardForm :data='sampleData'/>\n        </div>\n         <div v-if=\"noSample\">\n          <div class=\"shadow-lg bg-white mt-2\">\n            <h5 class=\"text-gray-900 text-md font-bold mb-2\">No sample found</h5>\n          </div>  \n        </div>\n        <Accordion />\n      </div>\n    </main>\n  </div>\n</template>\n\n<script setup>\nimport DashboardNav from \"../components/DashboardNav.vue\";\nimport BottomFooter from \"../components/BottomFooter.vue\";\nimport Accordion from \"../components/Accordion.vue\";\nimport SampleCardFrom from \"../components/SampleCardForm.vue\";\nimport { ref } from \"@vue/runtime-core\";\nimport { useRouter, useRoute } from 'vue-router'\nlet imgSource = \"(img/pexels-mike-b-383559.jpg)\";\n\nconst user = ref(null);\n\n// for redirect\nconst router = useRouter()\nconst route = useRoute()\n// during \"create\" = setup - check user session\nfetch(`http://localhost:8081/user`, {\n  credentials: \"include\",\n})\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error(\"error\");\n    } else return res.json();\n  })\n  .then((data) => {\n    console.log(data);\n    user.value = data;\n  })\n  .catch((error) => {\n    console.log(error);\n    swal({\n      title: \"Error\",\n      text: \"Access Denied\",\n      icon: \"error\",\n    });\n    setTimeout(() => {\n      router.push({ name: \"login\" });\n    }, 2000);\n  });\n\n// Get sample data - user specific\nlet searchWord = ref(\"\")\nlet alphabetical = ref(false)\nlet newest = ref(false)\n\nlet sampleData = ref([])\n\nconst getData = () => {\n  let email = user.value.email\n  fetch(`http://localhost:8081/data/modify?word=${searchWord.value}&alphabetic=${alphabetical.value.checked}&newest=${newest.value.checked}&email=${email}&getlength=true`)\n    .then(res => res.json())\n    .then(data => {\n      console.log(data)\n    })\n}\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}